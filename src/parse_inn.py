import logging
import os
import time
import queue
from datetime import datetime
from src.parser.inn_parser import INNParser
from src.parser.excel_writer import ExcelWriter

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)

logger = logging.getLogger(__name__)

def run_inn_parser_from_list(urls, log_queue=None):
    """–ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –ò–ù–ù —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ –æ—á–µ—Ä–µ–¥—å"""
    parser = None
    try:
        if log_queue:
            log_queue.put(f"üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –ò–ù–ù –¥–ª—è {len(urls)} –ø—Ä–æ–¥–∞–≤—Ü–æ–≤")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
        parser = INNParser(headless=True)
        
        # –ü–∞—Ä—Å–∏–º URL
        parser.parse_url_list(urls)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        filepath = parser.save_to_excel()
        
        if filepath:
            if log_queue:
                log_queue.put(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª: {os.path.basename(filepath)}")
            return f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:\n{os.path.basename(filepath)}", "", filepath
        return "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", "", None
    except Exception as e:
        error_msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {str(e)}"
        if log_queue:
            log_queue.put(error_msg)
        return error_msg, error_msg, None
    finally:
        if parser:
            parser.close()