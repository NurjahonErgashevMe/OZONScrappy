import asyncio
from src.parser.category_inn_parser.main import CategoryParser
from aiogram import Bot
from aiogram.types import Message, FSInputFile
from aiogram.fsm.context import FSMContext
from src.bot.keyboards import main_keyboard
import logging
import os

logger = logging.getLogger('bot.category_handler')


async def send_typing_action(bot: Bot, chat_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ 'typing' –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"""
    try:
        while True:
            await bot.send_chat_action(chat_id=chat_id, action="typing")
            await asyncio.sleep(30)
    except asyncio.CancelledError:
        # –ö–æ–≥–¥–∞ –∑–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –ø—Ä–æ—Å—Ç–æ –≤—ã—Ö–æ–¥–∏–º
        pass


async def handle_category_url(message: Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ URL –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    category_url = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é Ozon
    if not category_url.startswith('https://www.ozon.ru/category/'):
        await message.reply(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é Ozon –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`https://www.ozon.ru/category/–Ω–∞–∑–≤–∞–Ω–∏–µ-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏-ID/`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `https://www.ozon.ru/category/kruizery-11080/`"
        )
        return

    await state.clear()

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
    await message.reply(
        "üîÑ **–ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...**\n\n"
        "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç (5‚Äì20 –º–∏–Ω—É—Ç).\n"
        "üìä –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è."
    )

    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ "typing" —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    typing_task = asyncio.create_task(send_typing_action(bot, message.chat.id))

    try:
        # –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥
        parser = CategoryParser()
        sellers_data = await asyncio.get_event_loop().run_in_executor(
            None, parser.parse_category, category_url
        )

        # –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞—á—É "typing"
        typing_task.cancel()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if not sellers_data or '_files' not in sellers_data:
            raise ValueError("–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–æ –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã.")

        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        excel_filepath = sellers_data['_files']['excel']
        txt_filepath = sellers_data['_files']['txt']
        
        logger.info(f"Excel —Ñ–∞–π–ª: {excel_filepath}")
        logger.info(f"TXT —Ñ–∞–π–ª: {txt_filepath}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        if not os.path.exists(excel_filepath):
            raise FileNotFoundError(f"Excel —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {excel_filepath}")
        if not os.path.exists(txt_filepath):
            raise FileNotFoundError(f"TXT —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {txt_filepath}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ Excel —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FSInputFile
        excel_file = FSInputFile(excel_filepath)
        await bot.send_document(
            chat_id=message.chat.id,
            document=excel_file,
            caption=f"üìÑ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {sellers_data['_files']['category_name']} (Excel)"
        )

        # –û—Ç–ø—Ä–∞–≤–∫–∞ TXT —Ñ–∞–π–ª–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º FSInputFile
        txt_file = FSInputFile(txt_filepath)
        await bot.send_document(
            chat_id=message.chat.id,
            document=txt_file,
            caption="üìÑ TXT —Ñ–∞–π–ª —Å –ò–ù–ù –ø—Ä–æ–¥–∞–≤—Ü–æ–≤"
        )

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ (–∏—Å–∫–ª—é—á–∞—è —Å–ª—É–∂–µ–±–Ω—ã–µ –∫–ª—é—á–∏)
        sellers_count = len([k for k in sellers_data.keys() if not k.startswith('_')])

        await message.reply(
            "‚úÖ **–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n"
            f"üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤: {sellers_count}\n\n"
            "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!",
            reply_markup=main_keyboard()
        )

    except FileNotFoundError as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–æ–≤
        typing_task.cancel()
        logger.error(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {str(e)}")
        await message.reply(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.\n"
            "–í–æ–∑–º–æ–∂–Ω–æ, –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π.",
            reply_markup=main_keyboard()
        )
    except Exception as e:
        # –û–±—â–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        typing_task.cancel()
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤: {str(e)}")
        await message.reply(
            f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}",
            reply_markup=main_keyboard()
        )