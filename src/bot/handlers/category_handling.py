from src.parser.category_inn_parser import CategoryParser
from aiogram import Dispatcher, Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from src.bot.keyboards import main_keyboard, cancel_keyboard
import logging


logger = logging.getLogger('bot.category_handler')


async def handle_category_url(message: Message, state: FSMContext, bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ URL –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    category_url = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é Ozon
    if not category_url.startswith('https://www.ozon.ru/category/'):
        await message.reply(
            "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏!\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é Ozon –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`https://www.ozon.ru/category/–Ω–∞–∑–≤–∞–Ω–∏–µ-–∫–∞—Ç–µ–≥–æ—Ä–∏–∏-ID/`\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: `https://www.ozon.ru/category/kruizery-11080/`"
        )
        return
        
    await state.clear()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
    status_message = await message.reply(
        "üîÑ **–ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...**\n\n"
        "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç\n"
        "üìä –ë—É–¥–µ–º —Å–æ–±–∏—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–¥–∞–≤—Ü–∞—Ö –∏ –∏—Ö —Ç–æ–≤–∞—Ä–∞—Ö"
    )
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
        parser = CategoryParser()
        sellers_data = parser.parse_category(category_url)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        results_text = parser.format_results(sellers_data)
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.delete_message(message.chat.id, status_message.message_id)
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if len(results_text) > 4000:
            parts = [results_text[i:i+4000] for i in range(0, len(results_text), 4000)]
            for i, part in enumerate(parts):
                if i == 0:
                    await message.reply(part, reply_markup=main_keyboard())
                else:
                    await message.reply(part)
        else:
            await message.reply(results_text, reply_markup=main_keyboard())
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {str(e)}")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await bot.delete_message(message.chat.id, status_message.message_id)
        except:
            pass
            
        await message.reply(
            f"‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏**\n\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏: {str(e)}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å –¥—Ä—É–≥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π",
            reply_markup=main_keyboard()
        )